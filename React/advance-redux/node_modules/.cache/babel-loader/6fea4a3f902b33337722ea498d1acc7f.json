{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"Cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalAmount: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const exsistingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!exsistingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        exsistingItem.quantity++;\n        exsistingItem.totalPrice = exsistingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const exsistingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (exsistingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        exsistingItem.quantity--;\n        exsistingItem.totalPrice = exsistingItem.totalPrice - exsistingItem.price;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["/home/ayush/github/development/React/advance-redux/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","totalAmount","reducers","addItemToCart","state","action","newItem","payload","exsistingItem","find","item","id","push","itemId","price","quantity","totalPrice","title","removeItemFromCart","filter","cartActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,aAAa,EAAE,CAA5B;AAA+BC,IAAAA,WAAW,EAAE;AAA5C,GAFc;AAG5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC3B,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,aAAa,GAAGJ,KAAK,CAACL,KAAN,CAAYU,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA/C,CAAtB;AACAP,MAAAA,KAAK,CAACJ,aAAN;;AACA,UAAI,CAACQ,aAAL,EAAoB;AAClBJ,QAAAA,KAAK,CAACL,KAAN,CAAYa,IAAZ,CAAiB;AACfC,UAAAA,MAAM,EAAEP,OAAO,CAACK,EADD;AAEfG,UAAAA,KAAK,EAAER,OAAO,CAACQ,KAFA;AAGfC,UAAAA,QAAQ,EAAE,CAHK;AAIfC,UAAAA,UAAU,EAAEV,OAAO,CAACQ,KAJL;AAKfjB,UAAAA,IAAI,EAAES,OAAO,CAACW;AALC,SAAjB;AAOD,OARD,MAQO;AACLT,QAAAA,aAAa,CAACO,QAAd;AACAP,QAAAA,aAAa,CAACQ,UAAd,GAA2BR,aAAa,CAACQ,UAAd,GAA2BV,OAAO,CAACQ,KAA9D;AACD;AACF,KAjBO;;AAkBRI,IAAAA,kBAAkB,CAACd,KAAD,EAAQC,MAAR,EAAgB;AAChC,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,YAAMC,aAAa,GAAGJ,KAAK,CAACL,KAAN,CAAYU,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAAtB;AACAP,MAAAA,KAAK,CAACJ,aAAN;;AACA,UAAIQ,aAAa,CAACO,QAAd,KAA2B,CAA/B,EAAkC;AAChCX,QAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYoB,MAAZ,CAAoBT,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAzC,CAAd;AACD,OAFD,MAEO;AACLH,QAAAA,aAAa,CAACO,QAAd;AACAP,QAAAA,aAAa,CAACQ,UAAd,GACER,aAAa,CAACQ,UAAd,GAA2BR,aAAa,CAACM,KAD3C;AAED;AACF;;AA7BO;AAHkB,CAAD,CAA7B;AAmCA,OAAO,MAAMM,WAAW,GAAGxB,SAAS,CAACyB,OAA9B;AAEP,eAAezB,SAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"Cart\",\n  initialState: { items: [], totalQuantity: 0, totalAmount: 0 },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const exsistingItem = state.items.find((item) => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!exsistingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n        exsistingItem.quantity++;\n        exsistingItem.totalPrice = exsistingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const exsistingItem = state.items.find((item) => item.id === id);\n      state.totalQuantity--;\n      if (exsistingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        exsistingItem.quantity--;\n        exsistingItem.totalPrice =\n          exsistingItem.totalPrice - exsistingItem.price;\n      }\n    },\n  },\n});\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;\n"]},"metadata":{},"sourceType":"module"}