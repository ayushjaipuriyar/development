{"ast":null,"code":"var _jsxFileName = \"/home/ayush/github/development/React/auth/src/store/auth-context.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst calculationRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingTime = adjExpirationTime - currentTime;\n  return remainingTime;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem(\"token\");\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\n  const remainingTime = calculationRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 60000) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"adjExpirationTime\");\n    return null;\n  }\n\n  return storedToken;\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initialToken = localStorage.getItem(\"token\");\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  };\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expirationTime\", expirationTime);\n    const remainingTime = calculationRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"s3jk56xWU5XKZXYqw5SfcwTuysU=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/home/ayush/github/development/React/auth/src/store/auth-context.jsx"],"names":["React","useState","logoutTimer","AuthContext","createContext","token","isLoggedIn","login","logout","calculationRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingTime","retrieveStoredToken","storedToken","localStorage","getItem","storedExpirationDate","removeItem","AuthContextProvider","props","initialToken","setToken","userIsLoggedIn","logoutHandler","clearTimeout","loginHandler","setItem","setTimeout","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AACA,IAAIC,WAAJ;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACtCC,EAAAA,KAAK,EAAE,EAD+B;AAEtCC,EAAAA,UAAU,EAAE,KAF0B;AAGtCC,EAAAA,KAAK,EAAGF,KAAD,IAAW,CAAE,CAHkB;AAItCG,EAAAA,MAAM,EAAE,MAAM,CAAE;AAJsB,CAApB,CAApB;;AAMA,MAAMC,wBAAwB,GAAIC,cAAD,IAAoB;AACnD,QAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AACA,QAAMC,iBAAiB,GAAG,IAAIF,IAAJ,CAASF,cAAT,EAAyBG,OAAzB,EAA1B;AACA,QAAME,aAAa,GAAGD,iBAAiB,GAAGH,WAA1C;AACA,SAAOI,aAAP;AACD,CALD;;AAOA,MAAMC,mBAAmB,GAAG,MAAM;AAChC,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,QAAMC,oBAAoB,GAAGF,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAA7B;AACA,QAAMJ,aAAa,GAAGN,wBAAwB,CAACW,oBAAD,CAA9C;;AACA,MAAIL,aAAa,IAAI,KAArB,EAA4B;AAC1BG,IAAAA,YAAY,CAACG,UAAb,CAAwB,OAAxB;AACAH,IAAAA,YAAY,CAACG,UAAb,CAAwB,mBAAxB;AACA,WAAO,IAAP;AACD;;AACD,SAAOJ,WAAP;AACD,CAVD;;AAYA,OAAO,MAAMK,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAMC,YAAY,GAAGN,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,QAAM,CAACd,KAAD,EAAQoB,QAAR,IAAoBxB,QAAQ,CAACuB,YAAD,CAAlC;AAEA,QAAME,cAAc,GAAG,CAAC,CAACrB,KAAzB;;AAEA,QAAMsB,aAAa,GAAG,MAAM;AAC1BF,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAP,IAAAA,YAAY,CAACG,UAAb,CAAwB,OAAxB;;AACA,QAAInB,WAAJ,EAAiB;AACf0B,MAAAA,YAAY,CAAC1B,WAAD,CAAZ;AACD;AACF,GAND;;AAOA,QAAM2B,YAAY,GAAG,CAACxB,KAAD,EAAQK,cAAR,KAA2B;AAC9Ce,IAAAA,QAAQ,CAACpB,KAAD,CAAR;AACAa,IAAAA,YAAY,CAACY,OAAb,CAAqB,OAArB,EAA8BzB,KAA9B;AACAa,IAAAA,YAAY,CAACY,OAAb,CAAqB,gBAArB,EAAuCpB,cAAvC;AACA,UAAMK,aAAa,GAAGN,wBAAwB,CAACC,cAAD,CAA9C;AACAR,IAAAA,WAAW,GAAG6B,UAAU,CAACJ,aAAD,EAAgBZ,aAAhB,CAAxB;AACD,GAND;;AAOA,QAAMiB,YAAY,GAAG;AACnB3B,IAAAA,KAAK,EAAEA,KADY;AAEnBC,IAAAA,UAAU,EAAEoB,cAFO;AAGnBnB,IAAAA,KAAK,EAAEsB,YAHY;AAInBrB,IAAAA,MAAM,EAAEmB;AAJW,GAArB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEK,YAA7B;AAAA,cACGT,KAAK,CAACU;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhCM;;GAAMX,mB;;KAAAA,mB;AAkCb,eAAenB,WAAf","sourcesContent":["import React, { useState } from \"react\";\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n});\nconst calculationRemainingTime = (expirationTime) => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingTime = adjExpirationTime - currentTime;\n  return remainingTime;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem(\"token\");\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\n  const remainingTime = calculationRemainingTime(storedExpirationDate);\n  if (remainingTime <= 60000) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"adjExpirationTime\");\n    return null;\n  }\n  return storedToken;\n};\n\nexport const AuthContextProvider = (props) => {\n  const initialToken = localStorage.getItem(\"token\");\n  const [token, setToken] = useState(initialToken);\n\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  };\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expirationTime\", expirationTime);\n    const remainingTime = calculationRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}