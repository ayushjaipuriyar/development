{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: \"counter\",\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement() {\n      state.decrement--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n\n    toggleCount(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["/home/ayush/github/development/React/redux/src/store/index.js"],"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","action","amount","toggleCount","counterReducer","type","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;AAEAH,WAAW,CAAC;AACVI,EAAAA,IAAI,EAAE,SADI;AAEVH,EAAAA,YAAY,EAAEA,YAFJ;AAGVI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACL,OAAN;AACD,KAHO;;AAIRM,IAAAA,SAAS,GAAG;AACVD,MAAAA,KAAK,CAACC,SAAN;AACD,KANO;;AAORC,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACtBH,MAAAA,KAAK,CAACL,OAAN,GAAgBK,KAAK,CAACL,OAAN,GAAgBQ,MAAM,CAACC,MAAvC;AACD,KATO;;AAURC,IAAAA,WAAW,CAACL,KAAD,EAAQ;AACjBA,MAAAA,KAAK,CAACJ,WAAN,GAAoB,CAACI,KAAK,CAACJ,WAA3B;AACD;;AAZO;AAHA,CAAD,CAAX;;AAmBA,MAAMU,cAAc,GAAG,CAACN,KAAK,GAAGN,YAAT,EAAuBS,MAAvB,KAAkC;AACvD,MAAIA,MAAM,CAACI,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AACLZ,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CADpB;AAELC,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAFd,KAAP;AAID;;AAED,MAAIO,MAAM,CAACI,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAO;AACLZ,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgBQ,MAAM,CAACC,MAD3B;AAELR,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAFd,KAAP;AAID;;AAED,MAAIO,MAAM,CAACI,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AACLZ,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CADpB;AAELC,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAFd,KAAP;AAID;;AAED,MAAIO,MAAM,CAACI,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO;AACLX,MAAAA,WAAW,EAAE,CAACI,KAAK,CAACJ,WADf;AAELD,MAAAA,OAAO,EAAEK,KAAK,CAACL;AAFV,KAAP;AAID;;AAED,SAAOK,KAAP;AACD,CA9BD;;AAgCA,MAAMQ,KAAK,GAAGhB,WAAW,CAACc,cAAD,CAAzB;AAEA,eAAeE,KAAf","sourcesContent":["import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = { counter: 0, showCounter: true };\n\ncreateSlice({\n  name: \"counter\",\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement() {\n      state.decrement--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toggleCount(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter,\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}