{"ast":null,"code":"var _jsxFileName = \"/home/ayush/github/development/React/advance-hooks/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NewTask from \"./components/NewTask/NewTask\";\nimport Tasks from \"./components/Tasks/Tasks\";\nimport useHttp from \"./hooks/use-https\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n\n  const transfromTasks = taskObj => {\n    const loadedTasks = [];\n\n    for (const taskKey in taskobj) {\n      loadedTasks.push({\n        id: taskKey,\n        text: data[taskKey].text\n      });\n    }\n\n    setTasks(loadedTasks);\n  };\n\n  useHttp({\n    url: \"https://react-91786-default-rtdb.firebaseio.com/tasks.json\"\n  });\n\n  const fetchTasks = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://react-91786-default-rtdb.firebaseio.com/tasks.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n      const loadedTasks = [];\n\n      for (const taskKey in data) {\n        loadedTasks.push({\n          id: taskKey,\n          text: data[taskKey].text\n        });\n      }\n\n      setTasks(loadedTasks);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WHoLmzAMPD7nkcm9gecdSBRDU9c=\", false, function () {\n  return [useHttp];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ayush/github/development/React/advance-hooks/src/App.js"],"names":["React","useEffect","useState","NewTask","Tasks","useHttp","App","tasks","setTasks","transfromTasks","taskObj","loadedTasks","taskKey","taskobj","push","id","text","data","url","fetchTasks","setIsLoading","setError","response","fetch","ok","Error","json","err","message","taskAddHandler","task","prevTasks","concat","isLoading","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMO,cAAc,GAAIC,OAAD,IAAa;AAClC,UAAMC,WAAW,GAAG,EAApB;;AAEA,SAAK,MAAMC,OAAX,IAAsBC,OAAtB,EAA+B;AAC7BF,MAAAA,WAAW,CAACG,IAAZ,CAAiB;AAAEC,QAAAA,EAAE,EAAEH,OAAN;AAAeI,QAAAA,IAAI,EAAEC,IAAI,CAACL,OAAD,CAAJ,CAAcI;AAAnC,OAAjB;AACD;;AAEDR,IAAAA,QAAQ,CAACG,WAAD,CAAR;AACD,GARD;;AASAN,EAAAA,OAAO,CAAC;AACNa,IAAAA,GAAG,EAAE;AADC,GAAD,CAAP;;AAGA,QAAMC,UAAU,GAAG,YAAY;AAC7BC,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAC,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,4DAD0B,CAA5B;;AAIA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,YAAMR,IAAI,GAAG,MAAMK,QAAQ,CAACI,IAAT,EAAnB;AAEA,YAAMf,WAAW,GAAG,EAApB;;AAEA,WAAK,MAAMC,OAAX,IAAsBK,IAAtB,EAA4B;AAC1BN,QAAAA,WAAW,CAACG,IAAZ,CAAiB;AAAEC,UAAAA,EAAE,EAAEH,OAAN;AAAeI,UAAAA,IAAI,EAAEC,IAAI,CAACL,OAAD,CAAJ,CAAcI;AAAnC,SAAjB;AACD;;AAEDR,MAAAA,QAAQ,CAACG,WAAD,CAAR;AACD,KAlBD,CAkBE,OAAOgB,GAAP,EAAY;AACZN,MAAAA,QAAQ,CAACM,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDR,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAzBD;;AA2BAnB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMU,cAAc,GAAIC,IAAD,IAAU;AAC/BtB,IAAAA,QAAQ,CAAEuB,SAAD,IAAeA,SAAS,CAACC,MAAV,CAAiBF,IAAjB,CAAhB,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,MAAA,KAAK,EAAEtB,KADT;AAEE,MAAA,OAAO,EAAE0B,SAFX;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,OAAO,EAAEf;AAJX;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA5DQb,G;UAWPD,O;;;KAXOC,G;AA8DT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport NewTask from \"./components/NewTask/NewTask\";\nimport Tasks from \"./components/Tasks/Tasks\";\nimport useHttp from \"./hooks/use-https\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const transfromTasks = (taskObj) => {\n    const loadedTasks = [];\n\n    for (const taskKey in taskobj) {\n      loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n    }\n\n    setTasks(loadedTasks);\n  };\n  useHttp({\n    url: \"https://react-91786-default-rtdb.firebaseio.com/tasks.json\",\n  });\n  const fetchTasks = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://react-91786-default-rtdb.firebaseio.com/tasks.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n\n      const loadedTasks = [];\n\n      for (const taskKey in data) {\n        loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n      }\n\n      setTasks(loadedTasks);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}