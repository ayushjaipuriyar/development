{"ast":null,"code":"var _jsxFileName = \"/home/ayush/github/React/Login/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from 'react';\nimport Button from '../UI/Button/Button';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer);\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []); // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log('Checking form validity!');\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n  //   return () => {\n  //     console.log('CLEANUP');\n  //     clearTimeout(identifier);\n  //   };\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n    setFormIsValid(event.target.value.includes('@') && enteredPassword.trim().length > 6);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(enteredEmail.includes('@') && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E - Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: enteredEmail,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 91\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 17\n  }, this);\n};\n\n_s(Login, \"AJVkKrrK4Wmqyj2CxczL2AiROyc=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/ayush/github/React/Login/src/components/Login/Login.js"],"names":["React","useEffect","useReducer","useState","Button","Card","classes","emailReducer","state","action","value","isValid","Login","props","enteredEmail","setEnteredEmail","emailIsValid","setEmailIsValid","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","console","log","emailChangeHandler","event","target","includes","trim","length","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, {useEffect, useReducer, useState} from 'react';\n\nimport Button from '../UI/Button/Button';\nimport Card from '../UI/Card/Card';\n\nimport classes from './Login.module.css';\n\nconst emailReducer =\n    (state, action) => { return {value : '', isValid : false}; }\n\nconst Login = (props) => {\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer)\n\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n\n    return () => { console.log('EFFECT CLEANUP'); };\n  }, []);\n\n  // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log('Checking form validity!');\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n\n  //   return () => {\n  //     console.log('CLEANUP');\n  //     clearTimeout(identifier);\n  //   };\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n\n    setFormIsValid(event.target.value.includes('@') &&\n                   enteredPassword.trim().length > 6);\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n\n    setFormIsValid(enteredEmail.includes('@') &&\n                   event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler =\n      () => { setEmailIsValid(enteredEmail.includes('@')); };\n\n  const validatePasswordHandler =\n      () => { setPasswordIsValid(enteredPassword.trim().length > 6); };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n\n        return (\n                <Card className={classes.login}>\n                        <form onSubmit={submitHandler}>\n                                <div\n        className =\n            {`${classes.control} ${\n                emailIsValid === false ? classes.invalid : ''}`} >\n            <label htmlFor = \"email\">E -\n                Mail<\n                    /label>\n          <input\n                                                        type=\"email\"\n                                                        id=\"email\"\n                                                        value={enteredEmail}\n                                                        onChange={emailChangeHandler}\n                                                        onBlur={validateEmailHandler}\n                                                />\n                </div>\n                                        <div\n                                                className={`${classes.control} ${\n                                                        passwordIsValid === false ? classes.invalid : ''\n                                                        }`}\n                                        >\n                                                <label htmlFor=\"password\">Password</label><\n            input\n        type = \"password\"\n        id = \"password\"\n                                                        value={enteredPassword}\n                                                        onChange={passwordChangeHandler}\n                                                        onBlur={\n    validatePasswordHandler}\n                                                />\n                                        </div>\n                                        <div className={classes.actions}>\n                                                <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n                                                        Login\n          </Button>\n                                        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}